// Code generated by go-bindata.
// sources:
// tmpl/css/style.css
// tmpl/index.html
// tmpl/js/mapping.js
// tmpl/js/request_logger.js
// tmpl/js/util.js
// tmpl/swagger.json
// DO NOT EDIT!

package console

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _tmplCssStyleCss = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x90\xcf\x6e\xa3\x30\x10\x87\xcf\xeb\xa7\xb0\x94\xeb\x82\x94\x28\xd2\xae\x8c\xb4\x52\xb6\x6d\x5e\xa3\xf2\x9f\x01\x2c\x26\x1e\x34\x38\x4d\xa2\x28\xef\xde\x81\xd0\xa6\x87\x52\x2e\xc0\xef\x1b\x7f\xe3\x19\x63\x8a\x13\xb8\x2e\xe6\x62\xf0\x4c\x88\xce\xb2\xbe\x2a\x2d\xcf\x29\x86\xdc\x1a\xbd\xde\xf4\xe7\x4a\xdd\xd4\x37\x85\x45\x66\xeb\xbb\xb9\xdc\xc9\x67\xc3\x74\x4c\xa1\xf0\x84\xc4\x46\xaf\x9e\x76\x2f\xdb\xfd\xae\xba\x63\xe2\x00\x5c\x20\xd4\x59\x9c\xfd\x59\x0f\x84\x31\xe8\x95\xf7\x7e\xd1\xde\x1e\x0f\x6e\xd9\xbe\xdd\xfc\x75\xde\xfe\x78\xd8\xb4\xf4\x06\xbc\xac\x58\x3f\xff\xd9\xfe\xdf\x8f\x0a\xa5\xca\x01\x10\x7c\x86\xf0\xca\x74\xd2\x57\x5d\x53\xca\xa2\x8d\x4d\x2b\x17\x76\x84\xa1\xba\x49\x4d\xe6\x98\x1a\xa1\xb3\xa1\x61\x80\x54\x69\x21\x49\xda\x8d\xad\x3e\x48\xb0\xdc\x11\xdb\xd4\xc0\x84\x1d\x11\x82\x4d\x0f\xee\xf0\x08\xf3\x41\xc4\x47\x7c\xb0\x0d\xa4\x6c\x27\xd2\xc1\xe5\x01\x18\xc2\x18\xaa\x6c\x1d\x82\x2e\x25\x45\xdb\x0f\x50\x46\x71\xaa\x5f\x21\x0e\x3d\xda\x8b\x99\x68\x21\x03\x4c\x33\x95\xf7\xdf\xfb\x12\xfe\xe9\xec\x28\x5c\xc6\x37\xcf\xb3\x8e\x85\xe6\x93\x86\xdf\xea\x4b\x3e\x25\xcb\x9b\xab\xeb\x5a\x5a\xbc\x07\x00\x00\xff\xff\xc8\xe4\x9f\xe6\x3d\x02\x00\x00")

func tmplCssStyleCssBytes() ([]byte, error) {
	return bindataRead(
		_tmplCssStyleCss,
		"tmpl/css/style.css",
	)
}

func tmplCssStyleCss() (*asset, error) {
	bytes, err := tmplCssStyleCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "tmpl/css/style.css", size: 573, mode: os.FileMode(420), modTime: time.Unix(1485530015, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _tmplIndexHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x1a\xeb\x52\xdb\xca\xf9\x3f\x4f\xb1\x47\xbd\x0c\x4c\x22\x09\x63\x08\x04\x6c\xcf\x10\xf0\x69\xc2\xe0\x84\x80\x03\x3d\xe7\x4f\x66\x6d\xad\xad\x35\x2b\xad\xd0\xae\x7c\x49\x86\x99\x3e\x41\xdf\xa3\x3f\xfa\x12\xed\x9b\xf4\x49\xfa\xed\xea\x62\x59\xb6\x6c\x01\x93\xb4\xcc\x1c\xc7\x5a\x7d\xd7\xfd\xee\x9f\x4f\xe3\x97\xf3\x4f\x67\xdd\xdf\xae\xda\xe8\x7d\xb7\x73\xd9\xda\x6a\xb8\xd2\x63\xad\x2d\xf8\x97\x60\xa7\xb5\x85\xe0\xaf\xe1\x11\x89\x91\x2b\x65\x60\x92\x87\x88\x8e\x9b\xc6\x19\xf7\x25\xf1\xa5\xd9\x9d\x05\xc4\x40\xfd\xf8\xa9\x69\x48\x32\x95\xb6\xc2\x3f\x41\x7d\x17\x87\x82\xc8\xe6\x97\xee\xaf\xe6\x91\x81\xec\x84\x92\xa4\x92\x91\x56\xa7\xc3\xfb\xf7\x08\x88\x08\xce\x48\xc3\x8e\x0f\x63\x00\xd1\x0f\x69\x20\x91\x08\xfb\x4d\x43\x71\x14\xc7\xb6\xdd\xe7\x0e\xb1\x46\x0f\x11\x09\x67\x56\x9f\x7b\x76\xfc\xd5\xdc\xb3\x6a\xd6\xbe\xe5\x51\xdf\x1a\x09\xa3\xd5\xb0\x63\xd4\x75\x74\x1c\x7f\x24\xac\x3e\xe3\x91\x33\x60\x38\x24\x9a\x18\x1e\xe1\xa9\xcd\x68\x4f\xd8\x2e\xf6\x1d\x46\x7a\x20\x37\x10\xb4\xf7\xac\x5d\x6b\x77\xf1\x2c\xcf\x24\xe6\xc2\xa8\x7f\x8f\x42\xc2\x9a\x86\x90\x33\x46\x84\x4b\x88\x34\x90\x1b\x92\xc1\x9c\xab\x87\xa7\xc0\xd8\xea\x71\x2e\x85\x0c\x71\xa0\x1e\x14\xe3\xec\xc0\xae\x5b\x75\xeb\x8d\xdd\x17\x62\x7e\xa6\xd5\x82\x13\x03\x51\xb8\xdb\x61\x48\xe5\x0c\x78\xb8\xb8\x7e\xb4\x6f\xd6\x1e\x8e\xbc\xee\xc5\xa7\xd3\x9b\xe9\xd1\xa8\x76\x1a\xbd\xc2\x07\x77\xe7\xb7\xfe\x15\xdd\x63\xf7\xbf\x0e\x26\x93\xf6\x29\x3e\x72\xcf\xcf\x9d\xd1\xef\x2c\xb8\x24\xc3\xa9\x3b\xba\xed\xb4\x6b\x83\xe1\xe8\xee\xea\x2f\xde\xfd\x37\x71\x08\x06\x0b\xb9\x10\x3c\xa4\x43\xea\x37\x0d\xec\x73\x7f\xe6\xf1\x08\xd4\xfb\xc1\x4a\x99\xd2\x25\x1e\x59\xa7\xda\xe0\xf2\x6e\xef\xe3\x6e\x8d\x75\x1e\x46\xf8\xfe\xdd\xfd\xb4\xce\xec\xce\xdb\x36\x76\xa3\x49\x70\x33\x20\x1f\xc7\xb7\x6f\xea\x17\x07\xe4\x9b\x5f\x8f\x7e\xff\x86\x83\xee\x6e\x74\xd8\xfe\x4d\xfc\xb5\x33\xfa\x7c\xfb\x6a\xb7\xed\x1f\x84\x9b\x54\x5b\xe5\x15\x55\x55\x19\x15\xcd\x33\x5a\xa9\xc2\xae\x77\xd3\xbb\x38\x6f\xbf\xa7\x98\x0d\xbc\xe8\xdd\xbb\xcf\x57\x6f\x4e\xf7\x3f\x87\x41\xf8\x70\xf0\xe9\x76\x70\x57\x3f\xbc\xba\xbe\xae\x8f\x0e\xda\x97\x0f\x53\x21\x6a\xb3\xdb\x87\x4f\xd2\x27\x81\xff\xfe\xf6\xea\x2d\xbe\x38\x9c\xde\x94\xab\xb0\xd2\xf9\x16\xcd\xb2\xc1\xc3\x33\xf9\xeb\xa6\x03\xf2\xf1\xa1\x5d\xb3\xea\xfb\xd6\xdb\x82\x99\xe2\x77\x73\x3b\x2d\xf9\x82\x84\xb0\x4f\xa2\x5d\x01\x3c\x3f\xe4\x4a\x05\x1a\x95\xc8\xb3\x2a\x08\x13\xbe\x39\xa1\x2e\xf0\x18\xdf\xe8\x53\x23\x16\x07\xc8\x45\x92\xb2\x35\x89\x62\x03\x76\x08\x89\x8f\x08\xf9\x15\xe4\x18\x92\xf0\xf9\x74\x3c\x1c\x04\xd4\x1f\xae\x22\xb0\x3a\xec\x0a\x57\x9d\xd8\x5b\xd9\x4b\x43\x59\xb9\xfb\xd7\x59\xda\xc7\x1e\xc0\x8f\x29\x99\x04\x3c\x94\xb9\xdc\x3c\xa1\x8e\x74\x9b\x0e\x19\xd3\x3e\x31\xf5\xc3\x6b\xf0\x5e\x2a\xe1\x6e\x4d\xd1\xc7\x8c\x34\x6b\x46\x15\x55\x62\x18\xf5\xf7\xc7\x6d\xe4\xf0\x7e\xe4\x01\x79\xb4\x63\x85\x50\x2e\x66\xdb\x83\xc8\xef\x4b\xca\xfd\xed\x1d\xf4\x1d\x65\x90\xea\x6f\xe1\x61\x8c\x43\x94\x5c\xe9\xa5\xbe\x51\xd4\x44\x3e\x99\xa0\xeb\xfc\xd9\xf6\xce\xc9\x32\xd6\x44\x24\xa0\x77\xa4\x77\x03\x55\x84\xc8\x6d\x63\xa2\x3c\xcd\x40\xaf\x10\xe3\x7d\xac\xb8\x5b\x2e\x17\x12\x9e\x0d\x9b\xf4\x5d\x6e\xec\x9c\x2c\x90\x99\x08\x8b\xfb\x1e\x11\x02\x0f\x09\x10\xcb\x44\x26\x63\xd0\x64\x49\xee\x94\xf1\x1c\xe1\xe2\xe6\xd3\x47\x2b\x50\xe5\x2d\x46\xb1\x1c\x2c\x71\x81\x87\xfa\x5b\x50\xd0\x02\xcf\x69\xfb\x32\x9c\x6d\x27\x84\x0a\x08\x8f\x27\x5b\x5b\x4b\xca\x26\xde\x92\x68\xdc\x89\x9f\xb6\x17\xb4\x2c\x90\x49\xfd\x6b\x40\x19\xbb\xa4\x42\x6e\xef\x64\xaf\x1f\x01\x34\xb6\x6f\xe6\x77\x0d\x3b\x2e\xf2\x5b\x8d\x1e\x77\x66\x89\xf5\xdd\x30\xf9\xe2\xd0\x31\xea\x33\x2c\x04\xf8\x1b\x78\x11\xa6\x3e\x09\xcd\x01\x8b\xa8\x93\x73\x82\x86\x5b\x2b\x96\x73\x38\x99\xbf\xce\x11\x09\xf9\x24\x87\xa8\xdf\x62\x41\x1d\x32\x67\xc2\x4c\xcf\x31\xf7\x50\x80\x1d\x13\xd2\x9f\x2b\xcd\xdd\x02\x82\x46\x8a\x58\x8a\xe1\xe3\x31\x38\xfc\xd8\x0c\x40\x5b\xa1\xbf\x09\x89\xc1\x27\x9c\x15\x68\x1a\x95\xd1\x14\x15\x83\xcd\xc7\x04\x82\x10\x23\x65\x3e\x53\x82\x95\x98\x72\x77\xdc\x4b\x83\xec\x0f\x89\x01\x8d\x56\xe2\x96\xa2\x61\xe3\x12\xc2\x90\xce\x4a\x59\xae\xe5\x91\x18\xcc\x68\x25\xd6\x7d\x3e\x8b\x98\xe0\x08\x22\x35\x36\xef\xf1\x89\xb1\xc8\xd6\xe3\x0e\x66\xe9\x19\x0e\x87\xd0\x9d\x01\xff\x59\x47\x1f\xb7\x4e\x7b\x3c\x92\x4f\xe4\xde\xb0\x23\x56\xb0\xa8\xad\x4d\x5a\x38\x5c\xf0\x24\x6d\xe4\x9a\xb2\xec\x32\xbd\x1c\x20\x5c\x92\x99\x24\xaf\x32\x6b\xfe\x62\x9a\x5d\xdc\x43\x35\xd3\x2c\x01\x50\xe4\xa8\x03\x9e\x97\x18\x32\x4f\x3b\xc0\x3e\x41\x03\x0c\xee\x47\x7d\x94\x7a\xc3\x4a\x32\x29\x2f\xea\xf7\xf8\x14\x49\xce\x19\xf4\x83\x65\x3c\x8b\x6a\x2c\x3b\xfd\x3a\x68\x75\x3b\x53\x61\xd6\xf6\x36\xe0\x14\xf1\x82\x88\xb1\x38\x64\x2a\x20\x6a\x64\x9c\xa2\xf6\xa4\x8f\xe0\x3f\xd3\x21\x03\x1c\x31\xa9\xbf\x4f\xa1\xd0\xe8\xa6\xbc\x69\x5c\x93\x41\x08\xb5\xc8\xd0\xf7\x08\xef\xce\x18\xc1\x21\xa4\xb4\x0a\x7c\x34\xe8\x7a\xd5\xcb\xdc\x6d\x11\x08\x14\xdd\x70\x85\x15\x40\xc0\x80\xb6\xba\xde\x35\x76\xd3\x70\xab\xac\x81\x44\x80\xfb\x24\x3c\x50\x35\x7b\x2d\xa7\x4d\xaf\x95\x10\xe0\x11\x6b\x9d\x47\xc1\x3c\xcb\xd5\x94\x47\x33\xa4\x3f\x33\x6b\xce\x6b\x90\x91\x8f\x04\x78\xbe\x52\x70\x9b\x5c\x13\x64\x49\xeb\x1e\x83\x6a\x52\xe9\xf2\x72\x6c\x4c\x95\x6b\xf2\x51\xc7\x88\x09\xde\x14\x40\xa5\x58\x1f\x6e\x19\x41\x8d\xb3\x40\x52\x9f\x2c\xd2\x44\x31\x65\x97\x8f\x89\x6a\x2b\xb4\xc3\x9a\x59\xc9\x42\x3a\x38\x1c\x3e\xf1\xa1\x0d\x53\x3d\x53\x2a\x09\xc3\x33\x48\x79\xc7\x68\x40\xa7\xc4\x89\xcb\xe8\x84\x87\x8e\x39\x81\x9e\xf3\x18\xf5\xa0\xa1\xb9\x37\xd5\xc1\x49\xd5\x98\x92\xaa\x9a\xa6\x92\xb9\xd4\x71\x88\x0e\xa5\x6a\xd8\x31\x85\xb0\x3a\x70\xc2\x32\xef\xac\xc2\x33\xeb\xe0\xa3\xd0\x35\x73\x7f\xd8\x3a\xc7\x12\xaa\x71\xf2\xf0\x34\xb2\xb6\x74\x5f\x2a\x48\x6d\x2e\xc8\x19\xcc\xef\xff\x17\x82\x74\x88\x74\xb9\xf3\xbf\x13\xe5\x70\x2e\xca\x15\x96\xee\xcf\x10\x04\xa0\x2b\xfa\x94\xa2\x9b\xad\x7c\x36\x02\xcb\x79\xc7\x58\x81\x70\x35\x60\x00\x54\x81\xf9\xa2\x5c\x5f\x25\x03\xc7\xd9\x35\x4e\x94\x15\x73\xeb\x84\x30\x86\xd4\x87\x29\x90\x9a\x88\xd2\x62\xdb\x20\x5e\xeb\x12\x8b\x2c\xd1\xa2\x28\x80\x9c\x47\x9c\x63\x98\xa2\x80\x81\xce\x5c\x40\x41\x7e\x4d\xce\x8d\xd6\x1d\x86\x99\x0b\x3a\x74\xcb\x02\xf3\x03\x08\x94\x14\xa0\xf1\x1c\x7d\xd6\xbd\x02\x35\x91\xea\x8d\xf6\x36\xf6\x46\x69\x03\xba\xb2\x37\xda\xd0\x11\x6d\xac\x65\x05\x26\x2f\xaa\x07\xb9\x5a\x90\x92\x2b\xaf\x05\x10\x58\x34\x20\x4e\xbe\x32\x54\x2a\x37\x4f\x89\x80\x27\xe4\x6a\x95\x0a\xe2\x01\xdc\xa8\x1d\xfc\xc9\x68\x7d\x09\xe9\x13\xc3\x78\x4e\xa0\xbe\x0b\x04\xce\x49\xdc\xe4\xc3\x18\xf8\x6c\x42\x4a\x90\x34\x23\xbe\x44\x96\x38\x95\xbd\x40\x88\x6b\x22\xa0\x57\x79\x32\x89\xd6\x8f\xc4\xa8\x96\x37\xb3\x9c\x59\xc1\xb5\xaa\xe5\xc0\x2a\x2c\x37\x53\xda\x98\x49\x9f\x91\x56\x56\x9c\x17\x8e\x72\x8f\xc9\xd7\xf8\xbb\x4a\x46\x7a\xca\x44\x7a\xc8\x4c\x33\x46\x3e\xbf\xea\xd9\x34\x4e\x39\x71\x84\x27\x63\x29\x0a\xb9\x6a\xd8\xe2\x0d\xa0\xb1\x7a\xaf\xa0\x71\x93\x25\x21\x8a\x1f\x84\x57\xdc\x34\x2c\xc1\x97\xcf\x96\xcb\xb0\xca\xc6\xa5\x09\xa4\xd1\x8b\xa4\xe4\x7e\xb2\x2e\x8b\x1f\xb2\x9c\xd4\x67\x5c\x90\x64\xe6\x76\xa8\xf0\x68\x46\xd4\x68\xfd\x59\x52\x68\xae\x4f\x1a\x76\x8c\x53\x42\xdd\xdd\x5f\x94\x45\xcf\x65\x46\xb2\x73\xb9\x23\xbd\xdc\xde\x65\x7f\xd5\x84\xbe\xd2\x98\xcb\x2a\x2a\x9f\x2a\x53\x30\x68\x75\x3c\xc5\x8d\x0a\x04\x25\xed\x7d\xb7\x7b\x85\xd4\xb3\xda\x4c\x41\x22\x66\x34\x5e\x47\xa1\x01\x0f\xa1\x36\x0a\xa9\xcf\x7d\x07\xac\x09\xf5\x30\x08\xb9\xe4\x70\x35\x7a\xb5\x11\x94\x32\xb8\xa4\x7d\xe2\xf7\x09\x28\x13\xcc\x74\x69\x45\xff\xfa\xc7\x7f\xfe\xf6\x77\xb4\xb7\x5b\x3b\x7c\x8d\x2e\xa0\x0b\xa7\xa8\x83\x43\xf9\xef\x7f\xfa\x68\x3b\x5b\x76\xa8\x2d\xf3\xb1\x6d\x8f\xd4\x6b\x8b\x72\x18\x5a\x93\xb5\xc6\xd7\x1e\xc3\xfe\xbd\xd1\x2a\x00\xa8\x79\x73\x67\x9d\x18\xd7\x04\x66\x56\x01\x75\x23\xf2\xc1\xe0\xa8\xf3\xa1\x0b\x73\x0f\x48\x26\xc8\x6b\x24\x08\x41\x0b\x9c\xd5\xd6\x71\x48\xa5\x1b\xf5\xe2\x5f\xa5\x3c\x90\x8f\xfa\x47\x7b\xb6\xa7\x6e\xc7\xee\x31\xde\xb3\x3d\xb8\x03\x12\xda\x97\x1f\xce\xda\x1f\x6f\xda\x96\xe7\x2c\xcb\x98\xbc\x5b\xb3\x7a\x09\x5a\xfa\x6e\x1d\x02\x03\x0d\x13\x96\xb2\x38\x94\x37\xf0\x1a\x72\xfc\x14\x89\x56\x5f\xcf\x7a\x9c\x95\x52\x55\x76\xaa\x01\xe7\xf2\x79\x71\x53\xd8\x4a\x94\x44\xd0\x99\x8a\xae\xf2\xf8\x79\x59\xc6\xea\xb6\x3b\x57\x97\xa7\xdd\xf6\x0d\xca\x12\x56\xb2\x18\xcf\x8f\xa3\x44\xed\x74\x17\xd6\xf4\x53\x73\xfe\xa3\xa1\x29\x89\x17\x30\x68\xfc\xf2\xdb\x2e\xe8\x1c\xe6\xe9\x81\xf6\xef\x75\xdb\xf2\xfd\x7b\xfa\x13\x03\xcc\x0a\x3c\x7c\x7c\x2c\x2c\xea\xb2\x89\x3a\x76\x02\x73\x0e\xef\x47\x1e\x40\x17\xd4\x94\xce\xf2\x5c\x38\x47\x51\xad\xe8\xe3\x23\x14\x09\x67\x13\x9a\x1a\x9e\x7a\xad\xbc\x70\x8e\xc6\xec\x15\xaf\xb5\x12\xa9\x39\x1d\x4f\xf7\x1d\xd5\x64\x38\xcc\x23\x06\xd0\x6c\x14\xd1\x16\x6b\xb5\xba\xde\x85\x1d\x44\xc9\x8d\xa5\x5c\x04\xc4\x7c\x1f\x1a\x7a\x3e\xc9\xf6\x03\xe0\x67\x60\xb5\xd9\x31\xf2\xb9\x5f\x6c\x4b\xb5\x7c\x9c\xa9\xd6\xbd\x69\xec\x97\x95\x8f\x84\x50\x80\x1d\x07\x32\xdf\x31\xda\x0d\xa6\xa8\x76\x90\xff\x28\x8b\x0a\xb7\x0e\xcd\x9d\x96\x18\x32\x7a\xbd\x1c\x28\x9e\x2f\x12\x1d\x18\xee\x11\x86\xf4\xa7\x19\x84\x14\x62\x78\x96\x6d\xad\xb3\x31\xa3\x94\xda\xfa\x89\x29\x08\xb3\x0d\x3d\x7c\x35\x21\x06\x38\x63\xba\xf1\x6e\x35\x94\x3b\x80\x71\xd2\x9b\x7d\x54\x96\xd1\x67\x90\xb4\xc2\x92\xf6\x63\x5d\xeb\xb1\x4e\xaf\xe5\x08\x51\x8d\xa3\x9a\x1d\xc8\xcf\x51\x31\xe6\xf5\x43\x75\x4c\xd3\x5d\xeb\x92\x0f\x7f\x8a\x52\xd0\x32\x3d\x45\xa1\x6a\x29\x76\x75\x6c\xe6\x7e\xb6\x5d\xca\xa6\xe9\x40\x57\x3d\x9b\x66\xf4\x8b\x6d\x3a\xc4\x67\x9c\xb2\xbe\x5c\x7f\x88\x33\xd5\xca\x1c\x03\x00\xce\x7c\x86\x2a\x49\x44\xeb\x9c\x31\xce\x60\x73\x5f\xcc\xdc\xd3\x9a\xe7\xb6\xc4\x80\xab\xd9\x67\xf0\x71\x4a\x7b\xba\x04\x42\x62\x19\x89\x45\x09\x62\x1f\xb5\xe2\x57\x67\x49\xb2\x5e\x23\xc6\xa6\xdf\x01\xf4\x3f\xea\xd7\x64\x33\xdb\x13\xe8\xb2\x14\x85\xb4\x69\x24\x77\x6c\xb4\x6e\x01\x40\x75\x0a\x2f\xe0\x41\x1c\x2a\xd7\xf2\x68\x03\xc0\x32\x8f\xd5\xee\x05\x56\xd7\x23\x92\xfa\x81\x53\xfd\xdf\x4c\xff\x0d\x00\x00\xff\xff\x02\xcf\x7f\xaf\xe4\x24\x00\x00")

func tmplIndexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_tmplIndexHtml,
		"tmpl/index.html",
	)
}

func tmplIndexHtml() (*asset, error) {
	bytes, err := tmplIndexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "tmpl/index.html", size: 9444, mode: os.FileMode(420), modTime: time.Unix(1495184367, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _tmplJsMappingJs = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x55\x6d\x8b\xdb\x46\x10\xfe\x9e\x5f\xb1\x6c\x0f\x56\x26\xb6\x14\x28\xa5\xe0\x7b\xf9\x90\x6b\x21\x94\xa6\x2d\x5c\xfa\xe9\x7a\x84\xb5\x34\x67\x6d\xb2\xd6\xaa\xbb\xa3\xbb\x13\xc5\xff\xbd\x33\xb2\xe4\xc8\x96\xec\x73\xc0\x03\x06\xed\xce\xcc\x33\x2f\xcf\xcc\xfa\xb1\x2a\x52\x34\xae\x10\x1f\x75\x59\x9a\x62\x19\x65\x6e\xa5\x4d\x31\x11\xff\xbd\x79\x23\x48\x30\x37\x21\xde\xdc\x89\x6b\xb1\xf9\x68\x14\x49\x92\xba\x55\x69\x2c\x90\x09\xfd\x60\x55\x5a\x8d\xd0\xa8\x9e\xb4\x17\xab\x0d\xdc\xe7\xe0\x2a\x9f\x02\xb9\x5e\x44\xf2\x87\xf6\x72\x06\x05\xfa\x5a\x4e\xe2\x1c\x57\x36\x9a\x5c\x0e\x9c\x3a\x34\x72\xfb\xa0\x8b\xcc\xc2\x42\xfb\x10\xb7\xf1\xa2\x5d\x68\x72\xdf\xfa\x3f\x1a\x6b\x7f\x37\x01\xc9\xaf\xab\x2b\xe2\x4a\x44\x2b\x17\xf1\x12\xf0\xb7\xbb\x3f\xff\x88\x64\x8e\x58\xce\x93\x44\x8a\xb7\x6d\x51\xf4\x21\x13\x5d\x9a\xa4\x85\x97\xd3\x6f\x18\x99\x46\xdd\xc7\xe9\xe2\x19\x4a\x34\x50\xb0\xfb\x87\xcb\x1d\x5d\xbf\x56\xd4\x0b\xee\xd1\xc2\x65\x5c\x31\x15\x86\x75\x57\xf2\xb7\xb4\x40\xa7\x79\x13\xa5\x17\xf4\x2b\xd4\xd3\xae\x23\xfb\xc1\x59\x5a\xd5\xbd\x0a\xa8\xb1\x0a\x9f\x53\x67\x9d\x57\x0f\x94\x8e\xa0\x2a\x6f\xf9\xf4\xbe\xbe\x6b\x74\x5d\xcb\x62\x0f\xa1\x74\x45\x80\x78\xe3\x73\xeb\x32\xd8\xcb\x65\x07\x79\x05\x98\xbb\x6c\x1c\xf9\x63\xa3\xeb\x21\xff\x5b\x41\xc0\x78\xe3\x32\x02\xca\xfd\x62\xbe\x09\x65\x9f\xe6\x0e\x64\xc4\xeb\x70\x27\xe9\x12\x8a\x2c\x62\xc8\x3d\xbf\x75\xef\xbc\xee\xc6\x63\x7d\xd9\x9b\xe7\xfe\x9c\xb4\x9f\xad\xfa\x22\x52\xdb\x78\xcc\x87\x9a\xc4\x44\x85\x4a\xad\x49\xbf\xaa\xa9\x50\xf1\x02\x8b\xd9\x93\x81\xe7\x59\x6b\xa5\xa6\xe3\xa3\xc6\xe5\x56\xde\x34\x83\xcf\x31\x27\x31\xc3\x45\x92\xee\x64\x2f\xbf\xef\x99\xc8\x46\x45\xfe\x27\x0c\x66\xea\x0a\xa4\x25\xa3\xe8\x8c\x4d\x6c\x7b\xf2\x37\x8f\x75\x3b\x63\x45\x65\xed\x54\xc8\x7f\x50\x4e\x76\x5c\xdf\x3b\x87\x64\xab\xcb\x5f\x8c\xb6\x6e\x19\x87\xdc\x3d\x47\xc3\xc9\x43\x83\x16\xe6\x42\xb5\x4f\x86\xc8\xe0\xd1\x14\x86\x13\x52\xd3\xe1\x30\x41\x08\x7a\xc9\xe6\x57\xa5\x87\x1b\x45\x35\x84\xba\x40\xfd\xf2\xc1\x2c\x73\x4b\x3f\x8c\xda\x6c\x27\xa4\x52\x57\x49\x63\x75\x94\xd0\x2d\xb1\xa7\x53\x06\x99\xc1\x33\x51\xc6\x66\x34\x79\xa5\x33\x4d\x83\x4f\xe7\x6d\x8c\xf5\x0e\xe8\x4c\x9c\x0e\x29\x65\xcf\x0b\x84\x17\x6c\xca\x52\x57\xfc\xa9\x3d\x68\x61\xb2\x6b\xc9\x87\x59\x55\x12\x00\x74\xcd\x91\x22\x60\x6d\xe1\x5a\xae\x4c\x31\x7b\x36\x19\xe6\xf3\x9f\x7e\x7e\x57\xbe\x5c\xf2\x39\x07\xe6\x6b\xfe\xe3\x3b\xba\x90\x37\x57\x49\x07\x76\xa3\xf6\x5f\x34\xd6\xc4\x4f\xda\x6e\xb9\xdd\x51\x9f\x63\xe8\x98\xd1\x63\xe3\xd6\xa4\x30\xd4\x2f\x2a\x44\x7a\x01\xe7\xe2\x7e\x18\x82\xc5\xea\x05\x58\x0a\x73\xab\x8b\x14\xec\x48\x00\x16\xdd\x30\x35\xef\x71\xd6\xa4\x3e\xf6\x4a\x77\xb2\xb1\x88\x53\xeb\x02\xec\xbf\xff\x9d\xac\x07\xb7\xeb\xe9\x01\xc8\x2e\xcd\x3b\xfd\x04\x07\x92\x4c\x43\xb8\xb5\x3a\x50\xa9\x8a\x37\xa0\xf4\x66\xa5\x7d\x7d\xb6\x8a\x76\x47\x92\x97\x70\x64\x9a\x68\x17\x79\x08\x0e\xd4\x2b\x78\x13\xf4\x17\xfd\x32\x42\x77\x5f\xb0\x2e\x99\xf9\xbf\xfe\xfe\x74\x20\xfb\x4e\x2a\x4f\x3d\xd9\xae\xd4\x51\x53\x5e\x9a\x79\x57\xc0\x71\xd3\x50\xa5\x29\x70\x1f\xf7\x57\x74\xc0\xea\xf6\xdf\x84\xde\x95\xf5\x71\x50\xf0\xde\xf9\x11\x48\x6d\xc1\x63\x24\x7f\xdd\xa8\xe5\xdb\x91\x5d\x9f\x50\xa0\xfd\xc0\xaf\x44\x6b\xeb\xfc\xd4\x34\x52\x12\x37\xf4\x38\x6a\x8e\x9b\x7c\x09\xae\x90\xaf\xb7\x6a\xe3\xa9\xd8\x5a\x1d\x34\x5e\x9f\x3e\xd7\x0f\x27\x3e\xf0\x24\xeb\xff\x03\x00\x00\xff\xff\x3c\x1c\xde\x73\xa3\x0a\x00\x00")

func tmplJsMappingJsBytes() ([]byte, error) {
	return bindataRead(
		_tmplJsMappingJs,
		"tmpl/js/mapping.js",
	)
}

func tmplJsMappingJs() (*asset, error) {
	bytes, err := tmplJsMappingJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "tmpl/js/mapping.js", size: 2723, mode: os.FileMode(420), modTime: time.Unix(1495184415, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _tmplJsRequest_loggerJs = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x55\xdd\x6a\xdb\x4c\x10\xbd\xf7\x53\x6c\x94\x80\x57\x9f\xfd\x29\x4e\xe9\x95\x42\xa1\x34\x75\x09\x25\x4e\x69\x9c\x52\x7a\x15\xd6\xd2\xc4\x16\x91\x76\xd5\xd5\xa8\x8d\x09\x7e\xf7\xce\xee\x6a\xad\x1f\x9c\x1f\x81\x8d\x59\x9d\x39\x7b\xe6\xcc\x78\xe6\xbe\x96\x09\x66\x4a\xb2\x1b\xf8\x5d\x43\x85\x57\x6a\xbd\x06\xcd\x43\xf6\x34\x62\xf4\x9c\x9e\x26\xaa\x28\xb3\x1c\x18\x6e\xe8\x03\x45\x99\x0b\x04\xfb\xea\x8f\xd0\xac\x52\xb5\x4e\x80\x7d\x60\x27\x3c\x38\xd6\x8e\xe1\x7f\x90\xa8\xb7\x41\x18\x6d\xb0\xc8\x79\x78\xbe\x07\xfb\x68\x82\x5f\x0a\x99\xe6\xb0\x12\xba\x8a\x1a\x7e\xee\xa8\x08\x6e\xf1\xb8\xc9\xaa\x48\xd6\x05\x61\x67\xee\x64\x2f\xb4\x2e\x53\x22\xb9\xcd\x90\x82\xbc\x4c\xf3\x9c\xf0\x54\x25\x75\x41\xb7\x87\x91\x40\xd4\x3c\x40\x83\x09\xa6\x2c\xb8\x9e\xff\x64\x37\xf3\xef\x3f\xe6\xcb\xdb\xa3\xa3\xa0\x91\x64\x9e\x0a\xf0\x36\x2b\x40\xd5\xc8\xf7\xfc\x86\xf4\x25\xb2\xc5\x42\x25\x0f\xec\x42\xc9\x4a\xd1\x41\x78\xce\x76\x53\xf6\x6e\x36\x9b\x35\xb4\xbb\x81\xdc\x35\x60\x63\xad\xb9\x89\x23\x7d\x55\x28\x8a\xb2\x2b\xdd\xb8\xa3\x5b\x10\x25\x2d\xe1\x2f\xfb\x4c\x69\xb6\xf8\xff\xce\xda\x3b\x7c\x8c\x31\x02\x5d\x40\x27\x3c\xa2\x2b\x6d\x6c\xc8\x26\x2c\x38\x0d\xd8\x64\x1f\x64\x1e\x3e\x80\x2e\x94\xc4\x8d\xc5\x9e\x1d\x0e\x18\xe0\xbf\xd4\x79\xfe\x0b\x84\x76\xf4\xec\x23\x7b\x05\x7f\x49\x85\xad\x1c\x38\x7e\x05\xba\xc8\x64\x8d\xf0\x46\xf0\x12\x12\x25\xd3\x8a\x77\x3c\xd1\x80\xb5\x96\x7b\x5b\x0e\x17\xc4\xf5\xcf\x95\xa8\x7c\x5d\xfa\x3e\xf7\x5b\x6a\x7c\x9c\x13\xf0\xce\xc5\xa4\xe3\x30\x42\x78\x44\xfe\x6c\x4d\x9f\xef\x01\xea\x17\x1b\x4a\x3d\x3d\x35\x02\xc5\xb0\xfe\x44\x80\x75\x45\x95\x34\x2f\x23\x0d\x55\x49\x1d\x06\x91\x3b\xbe\x50\x29\xf4\x4b\x5f\x00\x6e\x54\xda\xc2\xad\x9a\xc8\x9d\xf6\x91\xa5\xc0\xcd\x10\x67\xce\xce\x0f\xb5\x1f\x01\xab\xad\x44\xf1\x78\x99\xad\x37\x39\x7d\x90\x7f\x5d\x7e\xbb\x26\x19\x3a\x93\xeb\xec\x7e\xcb\xbb\x3c\x53\x56\xcb\x14\xee\x33\x09\xe9\x94\xbd\x0f\xc3\x21\xa5\xcb\xe1\xcd\x9c\x0e\xfe\x32\x69\xae\xd6\x6f\xe7\xab\xf3\x57\x24\x26\x2a\x57\x9a\xf8\x6c\x81\xe8\xe7\xa7\xed\xd2\xfa\xcd\x9d\xed\xe1\x68\xd8\x5a\x4f\xde\xa8\x3b\x2a\x64\xcc\x6c\x35\x9b\x93\x98\xed\x5d\xf1\xa9\xc4\xac\x4d\x4a\x93\xf2\xd8\xc8\xdf\x07\xdc\x99\x9e\x8a\x87\x03\xc2\x6a\x37\x1d\x15\xb6\xc0\x84\xca\x1f\x37\x1d\xd2\x9e\xba\x62\xc7\x4d\x2b\xb4\xe7\xa6\xb8\xb1\x2d\x7b\x97\x81\xb2\x8b\x9b\x7c\x77\xbd\x2e\xb5\xa3\x96\x74\xcd\xcd\xd8\x26\x2f\xda\x41\x38\x6c\x53\x3f\x94\x27\x93\xa1\x8b\xb6\xb7\xbd\x8f\xae\xd1\x3d\xb8\xe9\xf6\x7e\x84\x59\x0d\x04\xf7\x1b\x81\x37\x0c\x1d\x54\x77\xa1\xa0\x58\x99\x05\xb4\x52\xa9\x59\x2b\xa5\x86\x12\x64\xca\x0d\x47\x27\xa0\xb7\x16\x86\xc7\xc3\x7f\x7b\x6b\x72\xb3\x6f\xc8\x12\xb2\xa3\x3b\xf5\x35\x88\x74\xdb\xdf\x0a\x23\x2f\x6c\x85\xf2\x22\xa7\x11\x48\xcb\x92\x04\x25\x79\x96\x3c\x1c\x40\xbe\x9c\x06\xa5\x8e\x5b\xaf\x74\xe7\x75\x98\x89\xe3\xf1\x46\x24\x4d\x1c\x25\xf9\xd8\x5e\x31\x9e\xb2\x71\xc3\xa1\xe9\xf7\xe1\x0b\x8d\xbb\x59\x6a\x37\xb2\xa9\x40\x18\x19\x16\xda\x5e\x42\x53\x6d\x82\x81\xc1\x34\x61\x09\x4c\x43\x8d\x96\x7e\x6b\x9b\x15\x33\x32\xdf\xff\x02\x00\x00\xff\xff\x02\x4a\x2c\xba\x1d\x08\x00\x00")

func tmplJsRequest_loggerJsBytes() ([]byte, error) {
	return bindataRead(
		_tmplJsRequest_loggerJs,
		"tmpl/js/request_logger.js",
	)
}

func tmplJsRequest_loggerJs() (*asset, error) {
	bytes, err := tmplJsRequest_loggerJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "tmpl/js/request_logger.js", size: 2077, mode: os.FileMode(420), modTime: time.Unix(1493733009, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _tmplJsUtilJs = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x92\xdf\xaf\x93\x30\x14\xc7\xdf\xf9\x2b\x1a\x62\x2e\xb0\xc9\x98\x66\x2f\x6e\x63\x44\xaf\x44\x1f\x34\x9a\xdc\xeb\x8b\x94\x25\x1d\x74\x0c\xed\xda\xa5\x3f\xd4\x79\xd9\xff\x2e\x65\x64\x63\x5c\x70\x3e\x78\x9b\x6c\xa5\xe7\xc7\xe7\x7c\x7b\x4e\x41\xb9\xd6\x8a\x26\x32\x67\x14\x64\x58\xde\x32\xc2\xf8\x9b\xfd\x9d\x44\x52\x09\x5b\x54\xdb\x2d\x4b\xb1\x03\x1e\x0c\x50\xaf\x7c\x0d\x1a\x1e\xe0\xfb\x3e\x78\x39\x1e\x83\xa2\x00\x8f\xac\x2f\x9a\x79\x7a\x71\x2c\x15\xa7\xc0\x14\x2a\x49\xb0\x10\xe6\xec\xe4\x3d\x00\x4c\x04\xee\x82\x4f\xc6\x93\x3e\x4c\x8a\x68\x86\xf9\x63\x4a\x77\xf4\x4f\xc4\x69\x4e\xb3\x66\xb8\x71\xfc\x37\x7a\xfa\xf0\x11\xcb\x0d\x4b\xed\x6d\xb5\xb5\x7b\x70\xb4\x56\x12\xad\x77\xe1\xbd\xd5\x27\x32\xa7\x6b\xd6\x7d\xd1\x26\xe1\xf3\xa7\xbb\x7e\xc4\x5f\xdb\x75\x41\xf9\xf2\x1f\x20\x6f\xc3\x0f\xe1\x7d\xd8\xcb\x79\x9a\xa6\x8b\x3d\x95\xe8\xd7\xfb\x3c\xdb\x90\xf2\x27\xed\x6f\x82\xd1\xa6\x02\x7d\x06\x7e\xb5\x8d\x38\xde\x11\x94\x60\xdb\xbb\xf1\xb2\xe7\xc0\xba\x41\xdb\xdd\xcc\x72\xce\xe6\xf9\xd1\x4c\xe4\x85\x75\x71\xb4\x66\xda\x7a\x56\x53\xeb\xbc\xe4\xda\xa6\x0d\xa1\x8a\x90\xfb\xfb\xb5\xfb\x75\xec\xbe\x8a\x1f\x26\x87\x02\xc2\x68\xa9\xe2\x22\x5a\x42\x68\xc6\xce\xa0\x0c\x11\x83\xa9\x13\x14\x70\x65\x4b\xae\x70\xb1\x46\x65\x17\x0a\xaa\x08\x71\xe0\xaa\x70\x03\x98\x0e\xed\x60\x0a\x47\x30\x1d\x38\x41\xf9\x15\xe1\x30\x8e\x86\xd0\x8d\xb5\xc7\x09\x1c\x2d\xe7\x74\x7d\x7b\x8b\x64\xb2\x69\xb7\xfc\x07\xe2\x20\x21\xa2\xbc\xb7\x45\xd5\x76\x85\xb9\x35\xbb\xf0\xeb\xc9\x79\x4b\xd3\x1b\x49\x2c\x64\x8d\x68\x33\x4e\x71\xd3\x67\x57\xe3\xf4\xaa\xeb\x7d\xc7\xfb\x56\xb1\xde\x51\xb7\x32\x85\xe4\xe5\xc0\xbb\x92\x8d\x0e\x54\x25\xed\xdc\xbf\xab\x12\xeb\x22\x2b\xc6\x08\x46\xb4\x55\xa5\xc9\xd4\x83\xf8\x57\x9a\x8e\x6d\xa3\xba\x5e\xb3\x35\x17\x3b\x44\xcb\x2c\x24\x84\x6f\x5a\x60\x58\x01\x86\xc0\x32\x17\xfa\x50\xd5\xd1\xc7\xb9\xa7\xe3\x16\x0d\xe4\xa1\x7e\x72\x07\xe3\x4f\x00\x00\x00\xff\xff\x60\x64\x0c\xd1\x73\x05\x00\x00")

func tmplJsUtilJsBytes() ([]byte, error) {
	return bindataRead(
		_tmplJsUtilJs,
		"tmpl/js/util.js",
	)
}

func tmplJsUtilJs() (*asset, error) {
	bytes, err := tmplJsUtilJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "tmpl/js/util.js", size: 1395, mode: os.FileMode(420), modTime: time.Unix(1493733009, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _tmplSwaggerJson = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x5a\x5f\x6f\xdb\x36\x10\x7f\xcf\xa7\x20\xbc\x3d\x6c\x40\x10\x65\xd9\x4b\xd1\xb7\x36\x2d\x86\x60\xcd\xd0\xd9\x6d\x81\xa1\x28\x0a\x5a\x3a\x5b\x6c\x24\x51\x23\xa9\x64\x5a\xe1\xef\xbe\x3b\xea\xaf\x29\xc9\x96\x5d\x3b\x4b\x8a\x14\x68\x2b\xf1\xc8\xbb\xe3\xef\x7e\x77\xfc\x23\x7f\x3d\x61\x6c\xa2\xef\xf8\x72\x09\x6a\xf2\x9c\x4d\x2e\xce\xce\x27\xa7\xd4\x26\x92\x85\xc4\x06\x92\xe3\xdb\x2d\x28\x2d\x64\x42\x3d\x7e\x29\x7b\x60\xab\x11\x26\x02\x6a\xbb\xbe\x96\xfe\x4d\xd5\x1a\x80\xf6\x95\x48\x4d\xd9\xff\x3a\x46\x19\x13\x9a\x71\x66\x40\x1b\x91\x2c\x19\x4f\x02\xb6\xe0\xda\xb0\x54\x49\x23\x4d\x9e\x52\xa3\x91\x32\x62\x0b\xa9\x58\x00\xb7\x10\xc9\x14\x2d\x56\x1a\x23\xe1\x43\xa2\xa1\x76\x07\x9b\x12\x1e\x17\x96\xaf\xde\x95\xbd\xb0\x31\x53\x11\xb5\x85\xc6\xa4\xfa\xb9\xe7\x2d\x85\x09\xb3\xf9\x99\x2f\x63\xef\x4b\xcc\x15\x9a\x7e\x76\xe1\xc5\xe4\x8e\x37\x8f\xe4\xdc\x8b\xd1\x05\x50\xde\x9b\xab\xcb\xd7\x7f\xcc\x5e\x9f\xc5\xc1\xc4\x2a\x5a\xe1\xbf\x2b\x8b\x41\x28\xb5\x21\x85\x91\xf4\x79\x44\x2f\xcf\x9f\x9d\x3f\xbb\x28\xf0\x31\x7c\xa9\x51\xf6\xd1\x0e\xe9\xb8\xa5\xe0\xef\x0c\x27\xdb\xb8\xe6\x80\xf2\x2e\x04\x56\x00\xa3\xc0\x97\x2a\x40\x74\xa2\x88\x95\xa3\x34\x13\x86\xda\x41\xdc\x02\x3e\x27\x2c\x86\x58\xaa\x9c\xfd\xc4\x0d\x8b\x80\x70\xcb\x12\x23\x22\xea\x85\xb0\x2a\xd0\x60\x7e\x3e\x63\xef\x42\x7c\x89\xf9\x0d\xd8\xe1\xa9\xd4\x5a\xcc\x23\x40\x58\x19\x06\x4f\x2c\x72\x66\x42\x1c\xcf\x2b\x23\xd8\xd5\xf8\xa1\x8d\x06\xd3\x29\xf8\x62\x21\x7c\x96\x72\x83\x88\x24\xec\x8e\xeb\xca\x81\xe0\xd4\x86\x8b\x47\x5a\x92\xae\x05\xe0\x28\x54\x05\x8d\xb3\x01\x18\x2e\x22\x7d\x56\xa2\x77\xda\x8f\x88\xc6\x10\x72\x25\xe4\x20\x24\x2f\x58\xd5\x85\x66\x05\x5a\x03\x4e\x12\x51\xc9\xc9\x41\xc3\x0d\xa0\xc7\xe4\x30\xb0\x3b\x0c\x05\x14\x6d\x9a\xf9\x3c\x61\x73\x60\x5c\xcd\x85\x51\x38\x9a\xfa\xe3\xd4\x97\x09\x04\x5b\x3c\x8a\x79\x4a\xc4\x1b\x74\xe8\x2f\x99\x59\xed\x31\x4f\xf8\x92\xe6\x1b\x4b\x03\xa8\x3e\x97\x99\x42\xeb\xd9\x9c\x95\x1a\x34\x7a\x04\x09\xb2\x56\x91\x8c\x25\x00\x2d\x26\x7d\xb2\x6c\x99\x73\x0d\x6f\xb9\x09\x49\xaf\xc7\x53\x51\x70\x48\xfb\x21\xc4\xd0\xd0\xc8\x32\x77\x52\x0f\xf2\x65\xa2\xb3\x35\x39\xda\xc3\x5c\xe0\xe4\xa1\xf7\x45\xa3\x9b\x75\x5f\xcc\xa4\x20\xf3\x47\xf6\x45\x47\x74\x93\xdb\x5e\x19\x49\x0f\xc1\x6e\xa7\xd8\x12\x4c\xeb\x95\xdc\xcd\x62\x4c\xa3\x9c\xe6\xf0\x1b\x98\x35\xc6\xd6\x20\xba\x99\x51\xb6\x55\xf9\x50\xb7\x7d\x6a\x0d\xa0\x5c\xb7\x7e\x5e\x05\xdb\x74\x77\xa6\x59\xb6\xf7\x4d\xb6\x6b\x28\xe5\x0a\x63\x6f\xa8\xb2\xe0\xf8\xb6\x04\x93\x28\x45\xb4\x41\xaf\xcd\x18\x05\x17\xe7\xe7\x4e\x53\x0f\x73\x95\xe2\x39\x93\x0b\xe6\x66\x7d\x85\x1b\x85\x99\x77\xd4\x10\x54\x79\x6a\xa9\xc8\x49\x83\x33\x8c\x6a\xb0\x81\xd8\xf5\xa8\x14\xfd\xa8\x60\x41\x23\x7f\xf0\x02\x58\x88\x44\x90\x2f\xda\xa3\x32\xfc\xaa\x7e\x9f\x38\xc3\x56\x27\x43\x6f\xcd\x73\xf5\xb4\x6a\xa7\x4e\x43\x11\x5b\x34\x20\xd8\x95\x26\xe5\xb0\xa3\xd2\x65\x93\x8d\x27\xda\x94\xa2\xff\x89\x36\x76\x8d\x1a\x4b\x9a\x29\x75\xc6\x02\x2b\xd5\x91\x18\xb3\xd5\xc0\x83\xa4\x0b\x7a\x9d\x45\xb8\x6c\xe3\xca\x88\xcb\xd1\x64\x9f\x30\x64\xc9\x9e\xf9\x5b\x0f\x3c\x6a\x06\x6f\xb6\xf2\x20\x83\xf2\x5d\xe5\x70\x0b\x14\x0d\x7e\xa6\x84\xc9\x2d\x58\x9b\x49\x55\xec\x2e\xdb\x8c\x4a\x8b\x6d\x73\x3f\xa5\x3e\x14\x9b\xd1\x63\xf0\x68\x83\xea\x43\x92\xa7\x35\xde\x21\x47\xb5\xb3\x7c\x29\x03\x37\xa4\x78\x9e\x22\xc9\xbc\x47\x42\xfe\x0a\x65\x93\xd2\xa8\x0c\x4e\x37\x12\x6e\x3c\xc1\xfa\x69\x32\x75\xf1\xa4\x3f\xfd\x7c\x78\x4a\x92\x9e\xe7\x81\x0a\x5b\x1d\x5d\x74\xb1\xd4\x7d\xde\x61\x2b\x5d\xac\x46\x54\xff\xca\x15\xa9\xd6\xb5\x2d\x37\xea\x23\xd5\xf8\x45\x6f\x9b\x99\x07\x59\x64\xbf\x95\xf3\x2f\x7c\xfa\x7f\x5a\xba\x30\x86\xfa\x03\x51\xae\x4e\x8c\xbb\xee\x7e\xe9\x9c\x5f\x9d\x15\xb7\x05\xb5\xb2\xb1\xd3\xd6\x77\xc8\xc0\x23\x0f\xe7\xa3\x49\xff\x12\x7b\xef\x2b\x45\xe2\x33\x9d\xaf\x57\xbb\x90\xc4\xc6\xaf\x71\xf4\xd0\x14\xd9\xa0\xfe\x7e\xd7\xc5\x1a\x9d\xfe\xc5\xb1\x4f\xe2\x5e\x26\xd2\x54\xfa\xfa\x55\x54\xd1\x46\xb5\xef\x74\x4a\xa9\xb3\xc4\x1e\x77\xb9\xbb\x1e\x84\xdb\xf6\xbe\xc7\xea\x55\xdf\x6c\xa5\xd9\x30\x01\xdf\xa7\x81\xbd\x5c\x3b\x1e\x07\xb7\x5b\x78\xda\x9e\x8d\xa8\x50\x47\xde\xa5\x3d\x40\xda\x06\x10\x61\x58\x07\x99\xfb\xca\x8a\x8f\xc9\xdc\xed\x16\x1e\xf9\x0a\x7b\xa4\x0d\xd3\x49\xf5\x05\xa5\xa5\xb5\x36\x3f\x71\x48\xde\x5a\x28\x9b\x0f\x4a\x03\x88\xd7\x75\x5e\xce\xbf\x80\xdf\xfa\xbe\x82\x71\xc0\xd0\x19\xe1\x00\x36\x79\x3f\xbd\x72\x11\xdc\x04\x96\xbb\x8e\x34\x13\x6c\xc5\x66\x5d\xc1\x61\x75\x57\x47\x24\x47\xef\xc8\xc3\xdc\xaa\x87\x41\x63\x55\xb9\xc1\x6e\xeb\xf2\x65\x62\x94\x8c\xc6\xa9\xba\x2c\x3b\x6f\x48\xec\x56\x4d\xfd\xb8\x1e\xab\x01\x98\x7b\x10\xea\x9b\x6a\x8f\xcb\x65\xcb\xa7\xb5\x0d\xdb\xb4\x83\x72\x43\xbd\xa9\xfb\xe9\x6e\x57\xca\x85\xee\xf5\xc7\x21\x78\x81\x55\x22\x94\xc1\xc1\xd5\xa6\xc5\x37\xa9\xc3\x2a\x45\xfc\x54\x3e\xb3\x1d\xde\xb6\x0b\xdc\x08\xee\xfc\xd9\x3b\xb4\xd7\x4a\x08\x3c\x18\xad\xf7\x77\xc8\xed\x2d\xc4\x10\xbd\xe5\x8d\x1b\xc6\xe1\xc0\x6f\x07\x69\x80\x19\x56\x76\x03\xf9\xa6\xa3\x8e\x8b\xab\xe3\xaa\xed\x7b\xcb\xa3\xcc\x4d\xeb\xed\x4a\xfa\xeb\x76\x0b\x05\xbb\xf9\x39\x08\x17\x46\xe6\x7b\xc9\x69\x97\x8e\xbd\x19\xdb\x4f\x8c\x56\xfe\x8e\x89\x7b\x93\xfe\x9d\xd2\xd8\xce\x7f\xa7\x98\xec\x5c\x00\xe8\xcb\x74\xa6\x2f\x65\xd0\xa9\xbd\xa3\xe0\x14\x89\x01\xfa\x35\xc6\x9a\x70\x21\x55\xcc\x4d\x29\xfe\xf5\xe2\x29\x25\xbe\xcf\x94\x68\x51\xa7\x37\x0d\xea\xa0\xf5\x31\xf7\x03\x81\xa0\xf7\xe7\x6d\x37\x0e\xe3\x26\xdb\xbd\x9e\x19\xb8\x9a\xd9\x10\x8d\x6d\x57\x2c\x97\x9d\x1d\x48\x33\xef\x4a\xb6\xf7\xc4\x53\x25\x64\xf9\xb5\xe3\x3e\xd3\x15\x8f\x37\xfc\xbe\x6d\xfa\x8a\xff\xbb\x9f\xcd\xb9\x94\x11\xf0\xa4\x5f\x6d\x7d\x15\x3d\xaa\xf4\xcc\x3a\x17\xd7\xab\xf5\x23\xd5\x3f\xf9\x4b\xae\xe1\xfd\xf4\xcd\x61\x93\x6f\x8d\x51\xb3\xae\xcb\x0d\xa5\x66\x9d\x5f\x2b\xed\xca\xa9\xf2\xb2\xe1\xf0\xa7\x03\x2a\x1a\x33\xfa\xed\xd3\x43\xc8\xd5\x96\x6f\x09\xdc\xed\xef\xd6\xb8\x90\x39\xe7\xd2\x81\xd5\x3b\x8b\xbe\x61\xf3\xae\x8a\xf1\x47\x98\xc3\x09\xfd\x5d\xfd\x17\x00\x00\xff\xff\x60\x03\x4d\x4c\x70\x29\x00\x00")

func tmplSwaggerJsonBytes() ([]byte, error) {
	return bindataRead(
		_tmplSwaggerJson,
		"tmpl/swagger.json",
	)
}

func tmplSwaggerJson() (*asset, error) {
	bytes, err := tmplSwaggerJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "tmpl/swagger.json", size: 10608, mode: os.FileMode(420), modTime: time.Unix(1495459029, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"tmpl/css/style.css":        tmplCssStyleCss,
	"tmpl/index.html":           tmplIndexHtml,
	"tmpl/js/mapping.js":        tmplJsMappingJs,
	"tmpl/js/request_logger.js": tmplJsRequest_loggerJs,
	"tmpl/js/util.js":           tmplJsUtilJs,
	"tmpl/swagger.json":         tmplSwaggerJson,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"tmpl": &bintree{nil, map[string]*bintree{
		"css": &bintree{nil, map[string]*bintree{
			"style.css": &bintree{tmplCssStyleCss, map[string]*bintree{}},
		}},
		"index.html": &bintree{tmplIndexHtml, map[string]*bintree{}},
		"js": &bintree{nil, map[string]*bintree{
			"mapping.js":        &bintree{tmplJsMappingJs, map[string]*bintree{}},
			"request_logger.js": &bintree{tmplJsRequest_loggerJs, map[string]*bintree{}},
			"util.js":           &bintree{tmplJsUtilJs, map[string]*bintree{}},
		}},
		"swagger.json": &bintree{tmplSwaggerJson, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
